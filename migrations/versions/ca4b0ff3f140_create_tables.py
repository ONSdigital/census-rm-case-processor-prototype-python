"""Create tables

Revision ID: ca4b0ff3f140
Revises: 
Create Date: 2019-04-12 17:06:37.533700

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import Sequence

from app.models import Base

# revision identifiers, used by Alembic.
revision = 'ca4b0ff3f140'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    caserefseq = Sequence('caserefseq', metadata=Base.metadata, start=10000000)
    op.execute(sa.schema.CreateSequence(caserefseq))

    uacqidlinkseq = Sequence('uacqidlinkseq', metadata=Base.metadata)
    op.execute(sa.schema.CreateSequence(uacqidlinkseq))

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('case',
    sa.Column('caseref', sa.String(length=16), server_default=sa.text("nextval('casesvcv2python.caserefseq')"), nullable=False),
    sa.Column('case_id', postgresql.UUID(), nullable=False),
    sa.Column('arid', sa.String(), nullable=True),
    sa.Column('estabarid', sa.String(), nullable=True),
    sa.Column('uprn', sa.String(), nullable=True),
    sa.Column('addresstype', sa.String(), nullable=True),
    sa.Column('estabtype', sa.String(), nullable=True),
    sa.Column('addresslevel', sa.String(), nullable=True),
    sa.Column('abpcode', sa.String(), nullable=True),
    sa.Column('organisationname', sa.String(), nullable=True),
    sa.Column('addressline1', sa.String(), nullable=True),
    sa.Column('addressline2', sa.String(), nullable=True),
    sa.Column('addressline3', sa.String(), nullable=True),
    sa.Column('townname', sa.String(), nullable=True),
    sa.Column('postcode', sa.String(), nullable=True),
    sa.Column('latitude', sa.String(), nullable=True),
    sa.Column('longitude', sa.String(), nullable=True),
    sa.Column('oa', sa.String(), nullable=True),
    sa.Column('lsoa', sa.String(), nullable=True),
    sa.Column('msoa', sa.String(), nullable=True),
    sa.Column('lad', sa.String(), nullable=True),
    sa.Column('rgn', sa.String(), nullable=True),
    sa.Column('htcwillingness', sa.String(), nullable=True),
    sa.Column('htcdigital', sa.String(), nullable=True),
    sa.Column('treatmentcode', sa.String(), nullable=True),
    sa.Column('collectionexerciseid', sa.String(), nullable=True),
    sa.Column('actionplanid', sa.String(), nullable=True),
    sa.Column('state', sa.Enum('ACTIONABLE', 'NOTSTARTED', 'INPROGRESS', 'COMPLETE', 'REFUSED', name='casestate', schema='casesvcv2python'), nullable=True),
    sa.PrimaryKeyConstraint('caseref'),
    schema='casesvcv2python'
    )
    op.create_table('uacqidlink',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('uacqidlinkseq', sa.Integer(), server_default=sa.text("nextval('casesvcv2python.uacqidlinkseq')"), nullable=True),
    sa.Column('qid', sa.BigInteger(), nullable=True),
    sa.Column('uac', sa.String(), nullable=True),
    sa.Column('caseref', sa.String(length=16), nullable=True),
    sa.ForeignKeyConstraint(['caseref'], ['casesvcv2python.case.caseref'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='casesvcv2python'
    )
    op.create_table('caseevent',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('eventdate', sa.TIMESTAMP(), nullable=True),
    sa.Column('eventdescription', sa.String(), nullable=True),
    sa.Column('uac_qid_link_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['uac_qid_link_id'], ['casesvcv2python.uacqidlink.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='casesvcv2python'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('caseevent', schema='casesvcv2python')
    op.drop_table('uacqidlink', schema='casesvcv2python')
    op.drop_table('case', schema='casesvcv2python')
    # ### end Alembic commands ###

    # dropping the case table doesn't seem to delete the casestate type
    op.execute('DROP TYPE casesvcv2python.casestate')

    caserefseq = Sequence('caserefseq', metadata=Base.metadata, start=10000000)
    op.execute(sa.schema.DropSequence(caserefseq))

    uacqidlinkseq = Sequence('uacqidlinkseq', metadata=Base.metadata)
    op.execute(sa.schema.DropSequence(uacqidlinkseq))
